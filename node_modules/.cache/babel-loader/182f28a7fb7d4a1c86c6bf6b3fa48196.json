{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable no-undef */\nimport { useState, useEffect } from \"react\";\nimport { getPage } from \"../Utility/getPage\";\nimport { getPokemon } from '../Utility/getPokemon';\nimport { useCallback } from \"react\";\nconst initialState = {\n  pokemons: []\n};\nexport const useHomeFetch = () => {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [next, setNext] = useState(null);\n  const [isLoadingMore, setIsLoadingMore] = useState(false); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const fetchPokemons = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(false);\n      const pokemonNext = await getPage(next);\n      const {\n        results,\n        previous\n      } = pokemonNext;\n      const pokemonData = [];\n\n      for (let pokeData of results) {\n        const temp = await getPokemon(pokeData.name);\n        pokemonData.push(temp);\n      }\n\n      setNext(pokemonNext.next);\n      setState(prev => ({\n        pokemons: previous == null ? [...pokemonData] : [...prev.pokemons, ...pokemonData]\n      }));\n    } catch (error) {\n      setError(true);\n    }\n\n    setLoading(false);\n  });\n  useEffect(() => {\n    // console.log('UwU');\n    // console.log(next);\n    fetchPokemons(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (!isLoadingMore) return;\n    fetchPokemons();\n    setIsLoadingMore(false);\n  }, [fetchPokemons, isLoadingMore, state.pokemons]);\n  return {\n    state,\n    loading,\n    next,\n    error,\n    setIsLoadingMore\n  };\n};\n\n_s(useHomeFetch, \"xol+leNtsmrNWbDTtz0ZBrqgcUE=\");","map":{"version":3,"sources":["D:/Rohan/Projects/WebDev/pokemon-organiser/src/hooks/getPokemonPage.js"],"names":["useState","useEffect","getPage","getPokemon","useCallback","initialState","pokemons","useHomeFetch","state","setState","loading","setLoading","error","setError","next","setNext","isLoadingMore","setIsLoadingMore","fetchPokemons","pokemonNext","results","previous","pokemonData","pokeData","temp","name","push","prev"],"mappings":";;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;AAIA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACK,YAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,KAAD,CAAlD,CAL8B,CAM9B;;AACA,QAAMkB,aAAa,GAAGd,WAAW,CAAC,YAAY;AAC1C,QAAI;AACAO,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACA,YAAMM,WAAW,GAAG,MAAMjB,OAAO,CAACY,IAAD,CAAjC;AACA,YAAM;AAAEM,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAwBF,WAA9B;AACA,YAAMG,WAAW,GAAG,EAApB;;AACA,WAAK,IAAIC,QAAT,IAAqBH,OAArB,EAA8B;AAC1B,cAAMI,IAAI,GAAG,MAAMrB,UAAU,CAACoB,QAAQ,CAACE,IAAV,CAA7B;AACAH,QAAAA,WAAW,CAACI,IAAZ,CAAiBF,IAAjB;AACH;;AACDT,MAAAA,OAAO,CAACI,WAAW,CAACL,IAAb,CAAP;AACAL,MAAAA,QAAQ,CAACkB,IAAI,KAAK;AACdrB,QAAAA,QAAQ,EAAEe,QAAQ,IAAI,IAAZ,GAAmB,CAAC,GAAGC,WAAJ,CAAnB,GAAsC,CAAC,GAAGK,IAAI,CAACrB,QAAT,EAAmB,GAAGgB,WAAtB;AADlC,OAAL,CAAL,CAAR;AAGH,KAdD,CAcE,OAAOV,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACDF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAnBgC,CAAjC;AAqBAV,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACAiB,IAAAA,aAAa,GAHD,CAIZ;AACH,GALQ,EAKN,EALM,CAAT;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACe,aAAL,EAAoB;AAEpBE,IAAAA,aAAa;AACbD,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GALQ,EAKN,CAACC,aAAD,EAAgBF,aAAhB,EAA+BR,KAAK,CAACF,QAArC,CALM,CAAT;AAMA,SAAO;AAAEE,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBI,IAAAA,IAAlB;AAAwBF,IAAAA,KAAxB;AAA+BK,IAAAA;AAA/B,GAAP;AACH,CA1CM;;GAAMV,Y","sourcesContent":["/* eslint-disable no-undef */\r\nimport { useState, useEffect } from \"react\";\r\nimport { getPage } from \"../Utility/getPage\";\r\nimport { getPokemon } from '../Utility/getPokemon'\r\nimport { useCallback } from \"react\";\r\nconst initialState = {\r\n    pokemons: [],\r\n}\r\n\r\nexport const useHomeFetch = () => {\r\n    const [state, setState] = useState(initialState);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [next, setNext] = useState(null);\r\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const fetchPokemons = useCallback(async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(false);\r\n            const pokemonNext = await getPage(next);\r\n            const { results, previous } = pokemonNext;\r\n            const pokemonData = [];\r\n            for (let pokeData of results) {\r\n                const temp = await getPokemon(pokeData.name);\r\n                pokemonData.push(temp);\r\n            }\r\n            setNext(pokemonNext.next);\r\n            setState(prev => ({\r\n                pokemons: previous == null ? [...pokemonData] : [...prev.pokemons, ...pokemonData]\r\n            }))\r\n        } catch (error) {\r\n            setError(true);\r\n        }\r\n        setLoading(false);\r\n    })\r\n\r\n    useEffect(() => {\r\n        // console.log('UwU');\r\n        // console.log(next);\r\n        fetchPokemons();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!isLoadingMore) return;\r\n\r\n        fetchPokemons();\r\n        setIsLoadingMore(false);\r\n    }, [fetchPokemons, isLoadingMore, state.pokemons])\r\n    return { state, loading, next, error, setIsLoadingMore };\r\n}"]},"metadata":{},"sourceType":"module"}