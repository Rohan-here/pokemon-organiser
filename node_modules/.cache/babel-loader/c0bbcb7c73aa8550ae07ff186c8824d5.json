{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { getPage } from \"../Utility/getPage\";\nimport { getPokemon } from '../Utility/getPokemon';\nconst initialState = {\n  pokemons: []\n};\nexport const useHomeFetch = () => {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [next, setNext] = useState(null);\n\n  const fetchPokemons = async next => {\n    try {\n      setLoading(true);\n      setError(false); // const pokemon = await getPokemon('ditto');\n      // console.log(pokemon);\n\n      const pokemonNext = await getPage(next);\n      const {\n        results,\n        previous\n      } = pokemonNext;\n      console.log(results);\n      setNext(pokemonNext.next);\n      setState(prev => ({ ...results,\n        pokemons: previous == null ? [...results] : [...prev.pokemons, ...results]\n      }));\n    } catch (error) {\n      setError(true);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    console.log('UwU');\n    fetchPokemons(next);\n  }, [setState]);\n  return {\n    state,\n    loading,\n    error\n  };\n};\n\n_s(useHomeFetch, \"wernuOzRoWR9MvCDTYbm/qlNbKw=\");","map":{"version":3,"sources":["D:/Rohan/Projects/WebDev/pokemon-organiser/src/hooks/getPokemonPage.js"],"names":["useState","useEffect","getPage","getPokemon","initialState","pokemons","useHomeFetch","state","setState","loading","setLoading","error","setError","next","setNext","fetchPokemons","pokemonNext","results","previous","console","log","prev"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;AAIA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACI,YAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMe,aAAa,GAAG,MAAOF,IAAP,IAAgB;AAClC,QAAI;AACAH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,KAAD,CAAR,CAFA,CAGA;AACA;;AACA,YAAMI,WAAW,GAAG,MAAMd,OAAO,CAACW,IAAD,CAAjC;AACA,YAAM;AAAEI,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAwBF,WAA9B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAH,MAAAA,OAAO,CAACE,WAAW,CAACH,IAAb,CAAP;AACAL,MAAAA,QAAQ,CAACa,IAAI,KAAK,EACd,GAAGJ,OADW;AAEdZ,QAAAA,QAAQ,EAAEa,QAAQ,IAAI,IAAZ,GAAmB,CAAC,GAAGD,OAAJ,CAAnB,GAAkC,CAAC,GAAGI,IAAI,CAAChB,QAAT,EAAmB,GAAGY,OAAtB;AAF9B,OAAL,CAAL,CAAR;AAIH,KAbD,CAaE,OAAON,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACDF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAlBD;;AAoBAT,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAL,IAAAA,aAAa,CAACF,IAAD,CAAb;AACH,GAHQ,EAGN,CAACL,QAAD,CAHM,CAAT;AAIA,SAAO;AAAED,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBE,IAAAA;AAAlB,GAAP;AACH,CA/BM;;GAAML,Y","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { getPage } from \"../Utility/getPage\";\r\nimport { getPokemon } from '../Utility/getPokemon'\r\nconst initialState = {\r\n    pokemons: [],\r\n}\r\n\r\nexport const useHomeFetch = () => {\r\n    const [state, setState] = useState(initialState);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [next, setNext] = useState(null);\r\n\r\n    const fetchPokemons = async (next) => {\r\n        try {\r\n            setLoading(true);\r\n            setError(false);\r\n            // const pokemon = await getPokemon('ditto');\r\n            // console.log(pokemon);\r\n            const pokemonNext = await getPage(next);\r\n            const { results, previous } = pokemonNext;\r\n            console.log(results);\r\n            setNext(pokemonNext.next);\r\n            setState(prev => ({\r\n                ...results,\r\n                pokemons: previous == null ? [...results] : [...prev.pokemons, ...results]\r\n            }))\r\n        } catch (error) {\r\n            setError(true);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('UwU');\r\n        fetchPokemons(next);\r\n    }, [setState])\r\n    return { state, loading, error };\r\n}"]},"metadata":{},"sourceType":"module"}